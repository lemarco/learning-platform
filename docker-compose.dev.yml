version: '3.9'

services:
  nginx:
    restart: always
    image: nginx:1.25.2-alpine
    volumes:
      - ./configs/nginx.dev.conf:/etc/nginx/nginx.conf
    ports:
      - '80:80'

  postgres:
    restart: always
    image: postgres:15.1-alpine

    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PWD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: 5432
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - ${PWD}/data/main/:/data/main/

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - ${PWD}/data/redis/:/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      RABBITMQ_USER: mquser
      RABBITMQ_PASSWORD: jaDACjsdflkmsdfKKKK490qfjioqn23rhf
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: wurstmeister/kafka:2.11-2.0.0
  #   ports:
  #     - "9092:9092"
  #   expose:
  #     - "9093"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "test-topic:1:1"

  # kafka-manager:
  #   image: hlebalbau/kafka-manager:latest
  #   environment:
  #     ZK_HOSTS: "zookeeper:2181"
  #     APPLICATION_SECRET: "random-secret"
  #   ports:
  #     - "9000:9000"
