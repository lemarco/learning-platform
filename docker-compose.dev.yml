version: '3.9'

services:
  reverse_proxy:
    container_name: reverse_proxy
    restart: always
    image: nginx:1.25.2-alpine
    volumes:
      - ./configs/nginx.dev.conf:/etc/nginx/nginx.conf
    ports:
      - '8000:80'

  users_events_db:
    container_name: users_events_db
    restart: always
    image: postgres:16.1-alpine

    environment:
      POSTGRES_HOST: ${USERS_EVENTS_DB_HOST}
      POSTGRES_PASSWORD: ${USERS_EVENTS_DB_PASSWORD}
      POSTGRES_DB: ${USERS_EVENTS_DB_NAME}
      POSTGRES_USER: ${USERS_EVENTS_DB_USER}
      POSTGRES_PORT: 5432
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '${USERS_EVENTS_DB_PORT}:5432'
    env_file:
      - .env
    volumes:
      - ${PWD}/data/users_events_db/:/var/lib/postgresql/data

  users_read_db:
    container_name: users_read_db
    restart: always
    image: postgres:16.1-alpine

    environment:
      POSTGRES_HOST: ${USERS_READ_DB_HOST}
      POSTGRES_PASSWORD: ${USERS_READ_DB_PASSWORD}
      POSTGRES_DB: ${USERS_READ_DB_NAME}
      POSTGRES_USER: ${USERS_READ_DB_USER}
      POSTGRES_PORT: 5432
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '${USERS_READ_DB_PORT}:5432'
    env_file:
      - .env
    volumes:
      - ${PWD}/data/users_read_db/:/var/lib/postgresql/data


  auth_events_db:
    container_name: auth_events_db
    restart: always
    image: postgres:16.1-alpine

    environment:
      POSTGRES_HOST: ${AUTH_EVENTS_DB_HOST}
      POSTGRES_PASSWORD: ${AUTH_EVENTS_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_EVENTS_DB_NAME}
      POSTGRES_USER: ${AUTH_EVENTS_DB_USER}
      POSTGRES_PORT: 5432
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '${AUTH_EVENTS_DB_PORT}:5432'
    env_file:
      - .env
    volumes:
      - ${PWD}/data/auth_events_db/:/var/lib/postgresql/data

  auth_read_db:
    container_name: auth_read_db
    restart: always
    image: postgres:16.1-alpine

    environment:
      POSTGRES_HOST: ${AUTH_READ_DB_HOST}
      POSTGRES_PASSWORD: ${AUTH_READ_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_READ_DB_NAME}
      POSTGRES_USER: ${AUTH_READ_DB_USER}
      POSTGRES_PORT: 5432
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '${AUTH_READ_DB_PORT}:5432'
    env_file:
      - .env
    volumes:
      - ${PWD}/data/auth_read_db/:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment: 
      ALLOW_ANONYMOUS_LOGIN: yes

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "baeldung:1:1"
